<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:property-placeholder location="dbconfig.properties"/>
    <!--    使用第三方数据源 Druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 整合 Mybatis -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.shy.entity"/>
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>

    </bean>

    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
        <property name="basePackage" value="com.shy.mapper"/>
    </bean>

    <!-- Spring 控制事务 -->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- spring事务控制, 底层需要使用Connection. 这里采用连接池来管理Connection -->
        <!-- 这里引用整合Mybatis时, 创建的druid连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 开启注解扫描, 为@Transactional注解的类和方法添加事务控制 -->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>


    <bean id="actorService" class="com.shy.service.impl.ActorServiceImpl">
        <property name="actorMapper" ref="actorMapper"/>
    </bean>

</beans>